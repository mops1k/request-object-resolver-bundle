includes:
    - vendor/phpstan/phpstan/conf/bleedingEdge.neon
    - vendor/phpstan/phpstan-phpunit/extension.neon
    - vendor/phpstan/phpstan-phpunit/rules.neon
    - phpstan-baseline.neon
rules:
    - PHPStan\Rules\DisallowedConstructs\DisallowedImplicitArrayCreationRule
    - PHPStan\Rules\ForeachLoop\OverwriteVariablesWithForeachRule
    - PHPStan\Rules\Methods\WrongCaseOfInheritedMethodRule
    - PHPStan\Rules\StrictCalls\DynamicCallOnStaticMethodsRule
    - PHPStan\Rules\StrictCalls\StrictFunctionCallsRule
    - PHPStan\Rules\SwitchConditions\MatchingTypeInSwitchCaseConditionRule
    - PHPStan\Rules\VariableVariables\VariableMethodCallRule
    - PHPStan\Rules\VariableVariables\VariableStaticMethodCallRule
    - PHPStan\Rules\VariableVariables\VariableStaticPropertyFetchRule
    - PHPStan\Rules\VariableVariables\VariableVariablesRule
services:
    - PHPStan\Rules\Operators\OperatorRuleHelper
parameters:
    level: 6
    tmpDir: /tmp/phpstan
    paths:
        - .
    excludePaths:
        analyseAndScan:
            - vendor/
            - var/
            - ecs.php
    reportUnmatchedIgnoredErrors: false
    polluteScopeWithLoopInitialAssignments: false
    polluteScopeWithAlwaysIterableForeach: false
    checkAlwaysTrueCheckTypeFunctionCall: false
    checkAlwaysTrueInstanceof: true
    checkAlwaysTrueStrictComparison: true
    checkExplicitMixedMissingReturn: true
    checkFunctionNameCase: true
    reportMaybesInMethodSignatures: false
    reportStaticMethodSignatures: true
    inferPrivatePropertyTypeFromConstructor: true
    checkMissingIterableValueType: true
    checkInternalClassCaseSensitivity: true
    # т.к. это библиотека, мы не уверены в типах входных значений
    treatPhpDocTypesAsCertain: false
    ignoreErrors:
        - path: ecs.php
          message: '#Class PhpCsFixer\\.+ not found#'
        - '#Dead catch - [a-zA-Z0-9\\_]+ is never thrown in the try block.#'
